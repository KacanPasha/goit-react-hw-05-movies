{"version":3,"file":"static/js/222.79ccfb52.chunk.js","mappings":"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","sources":["api/Api.js","pages/movieCardPage/MovieCardPage.styled.js","pages/movieCardPage/MovieKardCage.js","pages/reviemsPage/ReviemsPage.styled.js","pages/reviemsPage/ReviemsPage.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'db6e6625e26b450a55d1e6974d660ebb';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Block = styled.div`\ndisplay: flex;\ntext-align: left;\nmargin:16px;\n`;\n\nexport const FilmDetails = styled.div`\nmargin:16px;\n\n\n`;\n\nexport const GoBack = styled(Link)`\n  background-color: rgba(255, 99, 71, 0.2);\n  color: black;\n  font-size: 20px;\n  text-decoration: none;\n  margin: 16px;\n  border-radius: 10px;\n  border: none;\n  padding: 8px;\n  &:hover,\n  &:focus {\n    background-color: tomato;\n  }\n`;\n\nexport const Container = styled.div`\ndisplay: block;\ntext-align: left;\nborder-bottom: 1px solid;\nmargin: 16px;\nborder-bottom: 1px solid tomato;\n    box-shadow: 0 2px 4px rgba(255, 99, 71, 0.5);\n\n`\nexport const Title = styled.h2`\nmargin-left: 16px;`\n\nexport const LinkCastReviews = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  list-style-type: none;\n  border-bottom: 2px solid tomato;\n \n    \n\n&:hover,\n&:focus {\n  color: tomato;\n  \n}\n`\n\nexport const List = styled.ul`\nlist-style-type: none;\nmargin: 0;\nmargin-top: 8px;\npadding: 16px;\n`;\n\nexport const ListItem = styled.li`\nmargin-top: 8px;\n`","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api/Api';\nimport stubImage from '../../images/stub.jpg';\nimport {\n  Block,\n  Container,\n  FilmDetails,\n  GoBack,\n  LinkCastReviews,\n  List,\n  ListItem,\n  Title,\n} from './MovieCardPage.styled';\n\nexport default function MovieCard() {\n  const { id } = useParams();\n  const [film, setFilm] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await getMovieDetails(id);\n        setFilm(movieDetails);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  const location = useLocation();\n\n  const locationRef = useRef(location.state?.from ?? '/')\n  return (\n    <div>\n      <Container>\n        <GoBack to={locationRef.current}>&larr; Go back</GoBack>\n\n        {film ? (\n          <div>\n            <Block>\n              <div>\n                {film.poster_path ? (\n                  <img\n                    width=\"300px\"\n                    height=\"450px\"\n                    src={`https://image.tmdb.org/t/p/w300/${film.poster_path}`}\n                    alt={film.title}\n                  />\n                ) : (\n                  <img\n                    width=\"300px\"\n                    height=\"300px\"\n                    src={stubImage}\n                    alt=\"No_Photo\"\n                  />\n                )}\n              </div>\n              <FilmDetails>\n                <h1>\n                  {film.title} ({film.release_date.substring(0, 4)})\n                </h1>\n                <p>User Score: {Math.round(film.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{film.overview}</p>\n                <h2>Genres:</h2>\n                <p>\n                  {film.genres.map((e, index) => {\n                    const genre = e.name;\n                    return (\n                      <span key={e.id}>\n                        {genre}\n                        {index < film.genres.length - 1 ? ', ' : ';'}\n                      </span>\n                    );\n                  })}\n                </p>\n              </FilmDetails>\n            </Block>\n          </div>\n        ) : (\n          'Loading...'\n        )}\n      </Container>\n      <Container>\n        <Title>Additional information</Title>\n        <List>\n          <ListItem>\n            <LinkCastReviews\n              to={`/movies/${id}/cast`}\n              state = {{from: location.state?.from}}\n              \n            >\n              Cast\n            </LinkCastReviews>\n          </ListItem>\n          <ListItem>\n            <LinkCastReviews\n              to={`/movies/${id}/reviews`}\n              state = {{from: location.state?.from}}\n             \n            >\n              Reviews\n            </LinkCastReviews>\n          </ListItem>\n        </List>\n      </Container>\n    </div>\n  );\n}\n","import styled from \"styled-components\"; \n\nexport const List = styled.ul`\n  display: block;\n  list-style-type: none;\n  text-align: left;\n\n`","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'api/Api';\nimport { List } from './ReviemsPage.styled';\nimport MovieCard from 'pages/movieCardPage/MovieKardCage';\n\nexport default function ReviewsPage() {\n  const { id } = useParams();\n  const [films, setFilm] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const movieDetails = await getReviews(id);\n        setFilm(movieDetails);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <div>\n      <MovieCard />\n      <List>\n        {films &&\n        films.results &&\n        Array.isArray(films.results) &&\n        films.results.length > 0 ? (\n          films.results.map(e => (\n            <li key={e.id}>\n              <h2>{e.author}</h2>\n              <p>Character: {e.content}</p>\n            </li>\n          ))\n        ) : (\n          <li>\n            {films && films.results && !Array.isArray(films.results)\n              ? 'Sorry, no data available.'\n              : 'No trending data available'}\n          </li>\n        )}\n      </List>\n    </div>\n  );\n}\n"],"names":["API_KEY","URL","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","getMovies","_ref2","_callee2","query","_context2","_x","getMovieDetails","_ref3","_callee3","id","_context3","_x2","getCast","_ref4","_callee4","_context4","_x3","getReviews","_ref5","_callee5","_context5","_x4","Block","styled","_templateObject","_taggedTemplateLiteral","FilmDetails","_templateObject2","GoBack","Link","_templateObject3","Container","_templateObject4","Title","_templateObject5","LinkCastReviews","_templateObject6","List","_templateObject7","ListItem","_templateObject8","MovieCard","_location$state$from","_location$state","_location$state2","_location$state3","useParams","_useState","useState","_useState2","_slicedToArray","film","setFilm","useEffect","fetchMovieDetails","movieDetails","t0","console","error","location","useLocation","locationRef","useRef","state","from","_jsxs","children","_jsx","to","current","poster_path","width","height","src","alt","title","stubImage","release_date","substring","Math","round","vote_average","overview","genres","map","e","index","genre","name","length","ReviewsPage","films","fetchReviews","results","Array","isArray","author","content"],"sourceRoot":""}